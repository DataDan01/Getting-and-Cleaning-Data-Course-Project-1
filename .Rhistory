##The data are divided into the training and test data sets.
##subject_train/test is a list of the subject identifiers for each row.
##y_train/test is a list filled with the activity identifiers for each row.
##X_train/test is a table filled with values and it is organized based on
##the y_train/test activity identifiers and the subject_train/test subject identifiers
##First, let's import the training data.
subject_train<-read.table("./UCI HAR Dataset/train/subject_train.txt",col.names=c("Subject"))
y_train<-read.table("./UCI HAR Dataset/train/y_train.txt",col.names=c("Activity"))
X_train<-read.table("./UCI HAR Dataset/train/X_train.txt")
##Next, we will bind the three tables into one called "train".
train<-cbind(subject_train,y_train,X_train)
##Let's import the test data.
subject_test<-read.table("./UCI HAR Dataset/test/subject_test.txt",col.names=c("Subject"))
y_test<-read.table("./UCI HAR Dataset/test/y_test.txt",col.names=c("Activity"))
X_test<-read.table("./UCI HAR Dataset/test/X_test.txt")
##Next, we will bind the three tables into one called "test".
test<-cbind(subject_test,y_test,X_test)
##Let's bind the two data sets by their rows. We will have one large data set that contains
##both the training and test observations with their labels.
alldata<-rbind(train,test)
##Now let's change Subject and Activity into the factor class so it'll b easier to summarize the data.
alldata$Activity<-as.factor(alldata$Activity)
alldata$Subject<-as.factor(alldata$Subject)
##Now let's change the Activity labels to something more readable.
levels(alldata$Activity)<-c("Walking","Walking_Upstairs","Walking_Downstairs","Sitting","Standing",
"Laying")
##We need to clean up the data set some more. Let's collapse the observations into one per row.
##We will use the reshape2 library.
library(reshape2)
##First we need to get the names of the columns we want to melt.
varnames<-names(alldata)[3:ncol(alldata)]
##Next we will melt alldata based on Subject and Activity with the measurnments being in
##all of the columns to the right of those first three.
alldatamelt<-melt(alldata,id=c("Subject","Activity"),measure.vars=varnames)
##We will be using the dplyr package, which can be install using install.packages("dplyr").
library("dplyr")
View(alldata)
View(alldatamelt)
head(alldatamelt,n=50)
alldatamelt2<-alldatamelt[order(Activity),]
alldatamelt2<-alldatamelt[order("Activity"),]
head(alldatamelt2,n=50)
alldatamelt2<-alldatamelt[order(Activity),]
class(alldatamelt$Activity)
head(alldatamelt[order(Activity),],n=50)
View(alldatamelt)
View(alldatamelt)
561*10299
sum(aldata[,3:561])
sum(alldata[,3:561])
sum(alldatamelt$value)
sum(alldata[,3:563])
sum(alldatamelt$value)==sum(alldata[,3:563])
alldatamelt$variable<-NULL
View(alldata)
summary(alldatamelt)
tapply(alldatamelt$value,alldatamelt$Activity,mean)
colnames(alldatamelt$value)[3]<-"3-axial raw signals "
colnames(alldatamelt$value)[3]<-"3-axial raw signals"
colnames(alldatamelt$value)[3]<-"3-axial.raw.signals"
colnames(alldatamelt$value)[3]<-"3.axial.raw.signals"
colnames(alldatamelt)[3]<-"3-axial raw signals "
View(alldatamelt)
colnames(alldatamelt)[3]<-"3-axial raw signals"
rm(list=ls())
features<-read.table("./UCI HAR Dataset/features.txt")
View(features)
features$V2
as.character(features$V2)
X_train<-read.table("./UCI HAR Dataset/train/X_train.txt",col.names = as.character(features$V2))
rm(list=ls())
##The data are divided into the training and test data sets.
##subject_train/test is a list of the subject identifiers for each row.
##y_train/test is a list filled with the activity identifiers for each row.
##X_train/test is a table filled with values and it is organized based on
##the y_train/test activity identifiers and the subject_train/test subject identifiers
##First, let's import the feature names and prepare them for use in the read.table function.
features<-read.table("./UCI HAR Dataset/features.txt")
##Now, let's import the training data.
subject_train<-read.table("./UCI HAR Dataset/train/subject_train.txt",col.names=c("Subject"))
y_train<-read.table("./UCI HAR Dataset/train/y_train.txt",col.names=c("Activity"))
X_train<-read.table("./UCI HAR Dataset/train/X_train.txt",col.names = as.character(features$V2))
##Next, we will bind the three tables into one called "train".
train<-cbind(subject_train,y_train,X_train)
##Let's import the test data.
subject_test<-read.table("./UCI HAR Dataset/test/subject_test.txt",col.names=c("Subject"))
y_test<-read.table("./UCI HAR Dataset/test/y_test.txt",col.names=c("Activity"))
X_test<-read.table("./UCI HAR Dataset/test/X_test.txt",col.names = as.character(features$V2)))
##Next, we will bind the three tables into one called "test".
test<-cbind(subject_test,y_test,X_test)
X_test<-read.table("./UCI HAR Dataset/test/X_test.txt",col.names = as.character(features$V2)))
X_test<-read.table("./UCI HAR Dataset/test/X_test.txt",col.names = as.character(features$V2))
test<-cbind(subject_test,y_test,X_test)
alldata<-rbind(train,test)
View(alldata)
levels(alldata$Activity)<-c("Walking","Walking_Upstairs","Walking_Downstairs","Sitting","Standing",
"Laying")
View(alldata)
levels(alldata$Activity)<-c("Walking","Walking_Upstairs","Walking_Downstairs","Sitting","Standing",
"Laying")
levels(alldata$Activity)
View(alldata)
